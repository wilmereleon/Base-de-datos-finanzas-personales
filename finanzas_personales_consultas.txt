-- Consultas a la base de datos

/* 1. Consulta con INNER JOIN para obtener los detalles de los gastos de cada usuario:
   Esta consulta proporciona información detallada sobre los gastos de cada usuario, incluyendo el monto,
   la fecha del gasto, su descripción y la categoría a la que pertenece el gasto. */																								  																			  
SELECT u.Nombre AS Nombre_Usuario, g.Monto, g.Fecha_Gasto, g.Descripción, c.Nombre AS Nombre_Categoría
FROM Usuario u
INNER JOIN Gasto g ON u.ID_Usuario = g.ID_Usuario
INNER JOIN Categoría c ON g.ID_Categoría = c.ID_Categoría;

/* 2. Consulta con LEFT JOIN para ver todos los usuarios y sus inversiones:
   Muestra todos los usuarios y, si tienen, sus inversiones asociadas, incluyendo el monto de la inversión,
   la fecha y el porcentaje mensual de retorno. */	  
SELECT 
    u.Nombre,
    i.Monto,
    i.Fecha_Inversión,
    i.Porcentaje_Mensual
FROM 
    Usuario u
LEFT JOIN 
    Inversión i ON u.ID_Usuario = i.ID_Usuario;

/* 3. Consulta con RIGHT JOIN para traer las tarjetas de crédito y sus usuarios:
   Lista todas las tarjetas de crédito disponibles y, si están asignadas, muestra el nombre del usuario
   asociado a cada tarjeta. */			  
SELECT 
    tc.Numero_Tarjeta,
    tc.Fecha_Expiración,
    u.Nombre
FROM 
    Tarjeta_Crédito tc
RIGHT JOIN 
    Usuario u ON u.ID_Usuario = tc.ID_Usuario;
    
/* 4. Consulta para obtener el gasto total por cada usuario con INNER JOIN y SUM:
   Calcula el total de gastos realizados por cada usuario, sumando todos sus gastos. */   
SELECT 
    u.Nombre,
    SUM(g.Monto) AS Total_Gasto
FROM 
    Usuario u
INNER JOIN 
    Gasto g ON u.ID_Usuario = g.ID_Usuario
GROUP BY 
    u.Nombre;

/* 5. Consulta para obtener el gasto mínimo y máximo de cada categoría utilizando LEFT JOIN:
   Determina el gasto mínimo y máximo registrado en cada categoría de gastos. */															   
SELECT 
    c.Nombre,
    MIN(g.Monto) AS Gasto_Mínimo,
    MAX(g.Monto) AS Gasto_Máximo
FROM 
    Categoría c
LEFT JOIN 
    Gasto g ON c.ID_Categoría = g.ID_Categoría
GROUP BY 
    c.Nombre;
	
/* 6. Consulta con INNER JOIN para ver la cantidad promedio de los movimientos de tarjeta por usuario:
   Calcula el promedio del monto de los movimientos realizados con las tarjetas de crédito por cada usuario. */																											
SELECT 
    u.Nombre,
    AVG(mt.Monto) AS Promedio_Movimientos
FROM 
    Usuario u
INNER JOIN 
    Tarjeta_Crédito tc ON u.ID_Usuario = tc.ID_Usuario
INNER JOIN 
    Movimiento_Tarjeta mt ON tc.ID_Tarjeta = mt.ID_Tarjeta
GROUP BY 
    u.Nombre;

/* 7. Consulta con LEFT JOIN para obtener el total de inversiones por usuario:
   Suma el total de las inversiones realizadas por cada usuario, tratando los valores nulos como 0. */																							  
SELECT 
    u.Nombre,
    COALESCE(SUM(i.Monto), 0) AS Total_Inversiones
FROM 
    Usuario u
LEFT JOIN 
    Inversión i ON u.ID_Usuario = i.ID_Usuario
GROUP BY 
    u.Nombre;

/* 8. Consulta con RIGHT JOIN para obtener todas las metas de ahorro y sus usuarios:
   Muestra todas las metas de ahorro establecidas y, si están asignadas, el nombre del usuario asociado a cada meta. */																												
SELECT 
    ma.Descripción,
    ma.Monto,
    u.Nombre
FROM 
    Meta_Ahorro ma
RIGHT JOIN 
    Usuario u ON u.ID_Usuario = ma.ID_Usuario;

/* 9. Consulta con INNER JOIN para obtener el gasto total por cada categoría:
   Suma el total de los gastos realizados en cada categoría, proporcionando una visión del gasto total por categoría. */																												   
SELECT 
    c.Nombre,
    SUM(g.Monto) AS Total_Gasto_Categoría
FROM 
    Categoría c
INNER JOIN 
    Gasto g ON c.ID_Categoría = g.ID_Categoría
GROUP BY 
    c.Nombre;
	
/* 10. Consulta con LEFT JOIN para obtener el máximo y mínimo monto de inversión por usuario:
   Encuentra la inversión máxima y mínima realizada por cada usuario, permitiendo identificar los rangos de inversión. */																											 
SELECT 
    u.Nombre,
    MAX(i.Monto) AS Máxima_Inversión,
    MIN(i.Monto) AS Mínima_Inversión
FROM 
    Usuario u
LEFT JOIN 
    Inversión i ON u.ID_Usuario = i.ID_Usuario
GROUP BY 
    u.Nombre;

-- Fin del script
